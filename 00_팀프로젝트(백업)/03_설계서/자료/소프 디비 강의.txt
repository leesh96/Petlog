현대의 정보시스템 데이터베이스를 가지고 있다.
기관에서 필요한 데이터를 통합 저장해서 관리하는 시스템
 -> 어떤식으로 관리 되는지 설계가 필요하다.

현실세계의 데이터 -> 실제로 관심 있는 데이터
데이터추상화 -> 물리적세계
전체의 데이터 중에 필요한 적절한 데이터를 넣어야한다.
어떤게 필요하고 어떤식으로 넣어야 적절한가 -> 설계의 핵심
추상화 : 내가 필요 없는 부분은 가리고 필요한 부분만 드러나게

데이터 추상화 (데이터 모델링)

개념적 모델링, 논리적 모델링, 물리적 모델링
단계적으로 수행한다.
개념적 모델링 : ER 다이어그램, UML 다이어그램 -> 특정 데이터베이스 시스템을 생각하지 않고 필요한 데이터가 뭔지만 기술한 것
논리적 모델링 : DB 스키마 -> 스키마 : 데이터의 구조와 제약조건을 명시한 것
//여기까지가 핵심
물리적 모델링 : DB 테이블 -> 실제 인덱스, 물리적 설계
단계적으로 제대로 수행되어야 각 단계가 제대로 이루어진다.

개념적 데이터 모델링 (개념적 설계)
개체 - 관계 다이어그램
현실세계의 존재하는 데이터를 개체와 관계로 표시한다.
개체 예시 : 정보, 나이,, 이름,, 등등
관계 예시 : 각 개체들 간의 관계 ex 선후배,, 같은 동아리,, 

개체와 속성
개체 : 실세계에서 독립적으로 존재하는 실체
속성 : 개체를 기술하는 데이터

속성의 구분
복합 vs 단순=원자 (복합예시 - 주소 / 단순예시 - 학번)
단일 값 vs 다치 (한 개체가 하나씩 가짐 vs 한 개체가 여러개 가짐)
저장 vs 유도 (실제 DB에 저장되는 속성 vs 실제 DB로 부터 유도되는 속성)
널 값 : 적용할 수 없음 (해당없음), 알려지지 않음(누락, 모름) (ex 여학생의 경우 군필 속성)


관계 : 개체와 개체 간의 상호 연결성
대응 조건 : 차수에 따라 일대일, 일대다, 다대다 대응 (제일친한친구, 선후배관계, 친구관계)
참여 조건 : 전체 참여, 부분 참여
개체의 모든 구성원이 관계에 참여하면 전체 참여
개체의 일부 구성원만 관계에 참여하면 부분 참여

ER 다이어그램
개체와 관계를 표현한 그럼

요구사항 분석결과 필요

밑줄 : 키 속성
원2개: 다중속성

ER 다이어그램 - 개체와 관계 다이어그램
DB 스키마 - 릴레이션

논리적 데이터 모델링 (논리적 설계)
규칙0: 논리적 설계할 때 기본 고려 사항
1단계: 개체를 릴레이션으로 전환
규칙1:
2단계: 관계를 릴레이션으로 전환
규칙2 ~ 규칙 10

규칙0: 기본고려사항
 - 키 속성 선정
 - 모든 속성은 단일 값 속성으로 만듦
 - 가능한 Null 속성은 회피

규칙1: 개체 집합의 전환
 - 개체집합 -> 관계, 기본 키 지정, 모든 속성은 단일값
ex) 지도교수(교수번호, 교수명, 전공<-여러값) 지도교수(교수번호, 교수명), 지도교수-전공(교수번호, 전공)
    학생(학번, 학생명, 학과, 학년)
중복을 피하면서 릴레이션 갯수를 줄이는게 좋은 데이터베이스 설계

2단계: 관계를 릴레이션으로 전환
관계성 집합의 전환
이원관계: 대응비와 참여도에 따라 6가지로 구분하여 해당 규칙을 적용
일원관계: 이원관계와 동일한 규칙 적용
삼원관계: 이원관계로 전환하여 규칙 적용
일반화/상세화 관계: 공통의 기본 키를 적용

규칙2: 1:1 양방향 완전 참여
 - 두 관계는 하나의 관계로 통합
 - 주 키 : 통합전 두 관계의 주 키중 하나 선택
ex) 지도교수-학생(교수번호, 교수명, 전공, 학번, 학생명, 학과, 학년)
    학생-지도교수(학번, 학생명, 학과, 학년, 교수번호, 교수명, 전공)

규칙3: 1:1 한방향만 완전 참여
 - 부분 관계성 측 관계의 주 키를 완전 관계성 측 관계의 외래키로 포함시킴
 - 주 키 : 변함 없음
ex) 지도교수(교수번호, 교수명, 전공) / 학생(학번, 학생명, 학과, 학년, 교수번호)
     지도교수(교수번호, 교수명, 전공, 학번) / 학생(학번, 학생명, 학과, 학년) - 좋은 설계

규칙4: 1:1 양방향 부분 참여
 - 기존 두 관계의 주 키로 구성되는 새로운 관계 생성
 - 새로운 관계의 주 키 : 두 관계의 주 키 중 하나 선택
ex) 지도교수(교수번호, 교수명, 전공) / 학생(학번, 학생명, 학과, 학년) / 지도교수-학생(교수번호, 학번)
     지도교수-학생(교수번호, 학번, 지도내용)

규칙5: 1:다 다측이 완전 참여
1측 관계의 주 키를 다측 관계의 외부키로 포함시킴
ex) 지도교수(교수번호, 교수명, 전공) / 학생(학번, 학생명, 학과, 학년, 교수번호) - 좋은설계
     지도교수(교수번호, 교수명, 전공, {학번}) / 학생(학번, 학생명, 학과, 학년)

규칙6: 1:다 다측이 부분 참여
기존 두 관계의 주 키로 구성되는 새로운 관계 생성
새로운 관계의 주 키 : 다측 관계의 주 키
ex) 지도교수(교수번호, 교수명, 전공) / 학생(학번, 학생명, 학과, 학년) / 지도교수-학생(학번, 교수번호)

규칙7: 다:다
기존 두 관계의 주 키로 구성되는 새로운 관계 생성
새로운 관계의 주 키 : 두 관계의 주 키를 결합
ex) 지도교수(교수번호, 교수명, 전공) / 학생(학번, 학생명, 학과, 학년) / 지도교수-학생(학번, 교수번호)
 튜플이란? 릴레이션에 들어가는 하나하나의 개념

규칙8 이원 관계성 집합의 전환 규칙을 적용
1:다, 다측이 완전참여 직원(직원번호, 이름, 생년월일, 상사직원번호)
1:다, 다측이 부분참여 직원(직원번호, 이름, 생년월일)
		   상사-부하직원(부하직원번호, 상사직원번호)
다:다		   직원(직원번호, 이름, 생년월일)
		   상사-부하직원(부하직원번호, 상사직원번호)

규칙9 삼원 관계의 전환
 - 세 개의 이원 관계성 집합으로 전환한 후, 이원 관계성 집합의 전환 규칙을 적용

규칙10 일반화 관계의 전환
 - 상위 개체 집합을 나타내는 관계의 주 키를 하위 개체 집합을 나타내는 관계의 주 키로 사용
 - 상위 개체 집합에 각 하위 개체 집합의 유형을 표시하는 속성을 추가
